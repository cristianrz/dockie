#!/bin/sh

set -eu

get_graboid() {
	curl -L https://github.com/blacktop/graboid/releases/download/0.15.8/graboid_0.15.8_linux_x86_64.tar.gz > graboid.tgz
	tar xzvf graboid.tgz graboid
	rm ./graboid*gz
}

get_proot() {
	curl -L https://github.com/proot-me/proot/releases/download/v5.2.0/proot-v5.2.0-x86_64-static > proot
	chmod +x proot
}

get_appimagetool() {
	curl -L https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage > appimagetool-x86_64.AppImage
	chmod +x appimagetool-x86_64.AppImage
}

download() {
	echo "[+] Getting appimagetool..."
	get_appimagetool
	echo "[+] Getting proot..."
	get_proot
	echo "[+] Getting graboid..."
	get_graboid
}

make_image() {
	echo "[+] Building AppDir..."
	mkdir -p AppDir/usr/bin
	mkdir -p AppDir/usr/lib/dockie
	cp AppRun AppDir/
	cp dockie.desktop AppDir/
	cp dockie.png AppDir/
	cp dockie AppDir/usr/bin
	mv proot AppDir/usr/bin
	mv graboid AppDir/usr/bin
	echo "[+] Building AppImage..."
	ARCH=x86_64 ./appimagetool-x86_64.AppImage AppDir > /dev/null
	echo "[+] All done!"
	echo
	echo "You can now use Dockie with ./dockie-x86_64.AppImage or copy it somewhere in your PATH"
	echo
}

clean() {
	rm -rf AppDir
	rm -f proot
	rm -f graboid*
	rm -f dockie*AppImage
	rm -f appimagetool*
}

case "${1-}" in
clean) clean ;;
"")
	download
	make_image
	;;
*) echo 'unrecognised argument' >&2 && exit 1 ;;
esac
