#!/bin/sh
# BSD 3-Clause License
#
# Copyright (c) 2021, Cristian Ariza
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# _init_dir(path, variable name)
# Creates the directory and assigns its path to the variable name
_init_dir() {
	eval "$2=$1"
	mkdir -p "$1"
}


# Usage: dockie image rm [OPTIONS] ROOTFS
#
# Remove a guest.
#
_log_fatal() {
	printf '\033[30;31m%s:\033[30;39m %s\n' "${0##*/}" "$*" >&2 && exit 1
}


# Usage: dockie rm [OPTIONS] ROOTFS
#
# Remove a guest.
#
_rm() {
	[ "$#" -ne 1 ] && _usage rm

	guest_path="$DOCKIE_GUESTS/$1"

	[ ! -d "$guest_path" ] && _log_fatal "no such guest '$1'"

	[ -f "$guest_path/lock" ] && _log_fatal "guest is locked or currently" \
		"in use, otherwise do 'rm $guest_path/lock'"

	rm -rf "$guest_path" || _log_fatal "Please remove any remaining files" \
		"manually."
}


_usage() {
	# grab usages from comments
	awk '
	/^# Usage: dockie '"$1"'/, 0 {
		if ( $1 != "#" ) exit

		gsub(/# ?/,"")
		print ""$0
	}
	' "$0" && exit 1
}

main() {
	set -eu


	: "${DOCKIE_PATH:=$HOME/.dockie}"

	_init_dir "$DOCKIE_PATH/images" DOCKIE_IMAGES
	_init_dir "$DOCKIE_PATH/guests" DOCKIE_GUESTS

	[ "$#" -eq 0 ] && _usage "rm"

	case "x$1" in
	x | x-*) _usage "\[O" ;;
	esac

	_rm "$@"
}


HERE="$(
	cd "$(dirname "$0")"
	pwd
)" export HERE

# Allows sourcing without executing
case "${1-}" in
test) : ;;
*) main "$@" ;;
esac

