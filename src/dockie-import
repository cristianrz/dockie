#!/bin/sh
# BSD 3-Clause License
#
# Copyright (c) 2021, Cristian Ariza
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -eu

# _init_dir(path, variable name)
# Creates the directory and assigns its path to the variable name
_init_dir() {
	eval "$2=$1"
	mkdir -p "$1"
}

_import() {
	[ "$#" -ne 1 ] && _usage "import"

	[ "$1" = "${1%.tar}" ] && _log_fatal "extension must be .tar"

	# remove dirs and extensions
	image_name="${1##*/}"
	image_name="${image_name%.*}"

	_init_dir "$DOCKIE_IMAGES/$image_name" image_path

	# shellcheck disable=SC2154
	cp "$1" "$image_path/rootfs.tar"

	_tag_image "$image_path" "$image_name"
}

_log_fatal() {
	printf '\033[30;31m%s:\033[30;39m %s\n' "${0##*/}" "$*" >&2 && exit 1
}

# _tag_image(path, name)
_tag_image() {
	printf '%-20s%-22s%s\n' "$2 " "$(date '+%Y-%m-%d %H:%M:%S')" \
		"$(du -h "$1/rootfs.tar" | awk '{print $1"B"}')" > "$1/info"
}

_uuid() {
	id="$(cat /proc/sys/kernel/random/uuid)"
	echo "${id##*-}"
}

_usage() {
	cat << EOF >&2
# Usage: dockie import file
#
# Import the contents from a tarball to create an image
EOF
	exit 1
}

HERE="$(
	cd "$(dirname "$0")"
	pwd
)" export HERE

: "${DOCKIE_PATH:=$HOME/.dockie}"

_init_dir "$DOCKIE_PATH/images" DOCKIE_IMAGES
_init_dir "$DOCKIE_PATH/guests" DOCKIE_GUESTS

[ "$#" -eq 0 ] && _usage "_import"

_import "$@"

# Allows sourcing without executing
# case "${1-}" in
# test) : ;;
# *) main "$@" ;;
# esac
