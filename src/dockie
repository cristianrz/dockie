#!/bin/sh
# BSD 3-Clause License
#
# Copyright (c) 2021, Cristian Ariza
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# grab usages from comments
_usage() {
	awk '
        /^# Usage: dockie '"$1"'/, 0 {
                if ( $1 != "#" ) exit

                gsub(/# ?/,"")
                print ""$0
        }
        ' "$0" && exit 1
}

# Usage: dockie [OPTIONS] COMMAND [ARG...]
#
# Options:
#  -d        Debug mode
#  -h        Print usage
#  -v        Print version information and quit
#
# Commands:
#  exec      Run a command in a root filesystem
#  image     List images
#  import    Import the contents from a tarball to create an image
#  ps        List root filesystems
#  pull      Pull an image
#  rm        Remove one or more root filesystems
#  run       Run a command in a new root filesystem
#  search    Search the image server for images
#
# Run 'dockie COMMAND' for more information on a command.
#

main() {
	set -eu

	HERE="$(
		cd "$(dirname "$0")" || exit 1
		pwd
	)" export HERE

	VERSION="v1.0.0"

	PATH="$HERE:$PATH" export PATH

	[ "$#" -eq 0 ] && _usage "\[O"

	case "x$1" in
	x-v | x--version) printf 'Dockie version %s\n' "$VERSION" && exit 0 ;;
	x | x-*) _usage "\[O" ;;
	esac

  cmd="$1"
  shift

	type "dockie-$cmd" > /dev/null 2>&1 || _usage "\[O"

	# shellcheck disable=SC2145
	"dockie-$cmd" "$@"
}

# Allows sourcing without executing
case "${1-}" in
test) : ;;
*) main "$@" ;;
esac
